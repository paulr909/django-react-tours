{"ast":null,"code":"import _slicedToArray from \"/home/paul/PycharmProjects/django-projects/django-react-tours/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/paul/PycharmProjects/django-projects/django-react-tours/frontend/src/components/form/FieldValidation.js\";\nimport React from \"react\";\nimport { useState } from \"react\";\nexport function useValidation() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  const validate = event => {\n    if (event.target.value.length === 0) {\n      setError(\"Field cannot be empty... (hooks)\");\n    } else {\n      setError(null);\n    }\n  };\n\n  const ErrorDisplay = () => {\n    if (error) {\n      return React.createElement(\"div\", {\n        className: \"Error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, error);\n    }\n\n    return null;\n  };\n\n  return [ErrorDisplay, validate];\n} // Higher order component\n// export function withFieldValidation(WrappedComponent) {\n//   return class extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = { error: null };\n//     }\n//\n//     validate(name, value) {\n//       if (value.length === 0) {\n//         this.setState({ error: \"Field cannot be empty\" });\n//       } else {\n//         this.setState({ error: null });\n//       }\n//       this.props.onUpdate(name, value);\n//     }\n//\n//     render() {\n//       const { error } = this.state;\n//       const { onUpdate, ...passThroughProps } = this.props;\n//       return (\n//         <div className=\"Validated\">\n//           <WrappedComponent\n//             onUpdate={this.validate.bind(this)}\n//             {...passThroughProps}\n//           />\n//           {error && <div className=\"Error\">{error}</div>}\n//         </div>\n//       );\n//     }\n//   };\n// }","map":{"version":3,"sources":["/home/paul/PycharmProjects/django-projects/django-react-tours/frontend/src/components/form/FieldValidation.js"],"names":["React","useState","useValidation","error","setError","validate","event","target","value","length","ErrorDisplay"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,OAAO,SAASC,aAAT,GAAyB;AAAA,oBACJD,QAAQ,CAAC,IAAD,CADJ;AAAA;AAAA,QACvBE,KADuB;AAAA,QAChBC,QADgB;;AAE9B,QAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxB,QAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,KAA8B,CAAlC,EAAqC;AACnCL,MAAAA,QAAQ,CAAC,kCAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAND;;AAOA,QAAMM,YAAY,GAAG,MAAM;AACzB,QAAIP,KAAJ,EAAW;AACT,aAAO;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBA,KAAxB,CAAP;AACD;;AACD,WAAO,IAAP;AACD,GALD;;AAMA,SAAO,CAACO,YAAD,EAAeL,QAAf,CAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nexport function useValidation() {\n  const [error, setError] = useState(null);\n  const validate = event => {\n    if (event.target.value.length === 0) {\n      setError(\"Field cannot be empty... (hooks)\");\n    } else {\n      setError(null);\n    }\n  };\n  const ErrorDisplay = () => {\n    if (error) {\n      return <div className=\"Error\">{error}</div>;\n    }\n    return null;\n  };\n  return [ErrorDisplay, validate];\n}\n\n// Higher order component\n// export function withFieldValidation(WrappedComponent) {\n//   return class extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = { error: null };\n//     }\n//\n//     validate(name, value) {\n//       if (value.length === 0) {\n//         this.setState({ error: \"Field cannot be empty\" });\n//       } else {\n//         this.setState({ error: null });\n//       }\n//       this.props.onUpdate(name, value);\n//     }\n//\n//     render() {\n//       const { error } = this.state;\n//       const { onUpdate, ...passThroughProps } = this.props;\n//       return (\n//         <div className=\"Validated\">\n//           <WrappedComponent\n//             onUpdate={this.validate.bind(this)}\n//             {...passThroughProps}\n//           />\n//           {error && <div className=\"Error\">{error}</div>}\n//         </div>\n//       );\n//     }\n//   };\n// }\n"]},"metadata":{},"sourceType":"module"}